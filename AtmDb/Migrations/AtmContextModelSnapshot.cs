// <auto-generated />
using System;
using ATMDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AtmDb.Migrations
{
    [DbContext(typeof(AtmContext))]
    partial class AtmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ATMDb.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Bvn")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Cvv")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginDetailId")
                        .HasColumnType("int")
                        .HasColumnName("LoginId");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LoginDetailId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountBalance = 1234453636m,
                            AccountNumber = 760015555,
                            Bvn = 12345678m,
                            Cvv = 123,
                            FirstName = "Alex",
                            LastName = "Ogubuike",
                            LoginDetailId = 1,
                            Password = "1234",
                            TimeStamp = new DateTime(2021, 8, 25, 23, 15, 35, 608, DateTimeKind.Local).AddTicks(5650),
                            isActive = true
                        });
                });

            modelBuilder.Entity("ATMDb.Models.LoginDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CVV")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVV = 123,
                            Name = "Alex",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("ATMDb.Models.Account", b =>
                {
                    b.HasOne("ATMDb.Models.LoginDetail", "LoginDetail")
                        .WithMany()
                        .HasForeignKey("LoginDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
